basePath: /
definitions:
  dto.CreateHangoutRequest:
    properties:
      date:
        type: string
      description:
        type: string
      status:
        $ref: '#/definitions/enums.HangoutStatus'
      title:
        type: string
    required:
    - title
    type: object
  dto.HangoutDetailResponse:
    properties:
      created_at:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/enums.HangoutStatus'
      title:
        type: string
    type: object
  dto.SignInRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.SignInResponse:
    properties:
      token:
        type: string
    type: object
  dto.SignUpRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  enums.HangoutStatus:
    enum:
    - PLANNING
    - CONFIRMED
    - EXECUTED
    - CANCELLED
    type: string
    x-enum-varnames:
    - StatusPlanning
    - StatusConfirmed
    - StatusExecuted
    - StatusCancelled
  response.StandardResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: API documentation for the Hangout Planner service
  title: Hangout Planner API
  version: "1.0"
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User sign in data
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/dto.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.StandardResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.SignInResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.StandardResponse'
      summary: Sign in
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User sign up data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.StandardResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.StandardResponse'
      summary: Sign up
      tags:
      - auth
  /hangouts/:
    post:
      consumes:
      - application/json
      description: Creates a new hangout for the authenticated user.
      parameters:
      - description: Hangout creation data
        in: body
        name: hangout
        required: true
        schema:
          $ref: '#/definitions/dto.CreateHangoutRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Hangout created successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.StandardResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.HangoutDetailResponse'
              type: object
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.StandardResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.StandardResponse'
      security:
      - BearerAuth: []
      summary: Create Hangout
      tags:
      - Hangouts
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and a JWT.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
